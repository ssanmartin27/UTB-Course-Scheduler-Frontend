{"ast":null,"code":"//const sectionsxd = sections.filter((sec) => sec.subjectCourse === \"ISCOA01A\" || sec.subjectCourse === \"ISCOA05A\" || sec.subjectCourse === \"ISCOC08A\" || sec.subjectCourse === \"ISCOZ01A\" || sec.subjectCourse === \"ISCOP01A\" || sec.subjectCourse === \"ISCOC11A\" || sec.subjectCourse === \"ISCOA06A\")\n\nconst backtrack = (a, k, input, solutions, credits, max_credits) => {\n  if (a.length !== 0) {\n    input = prune(input, a[k - 1], credits, max_credits);\n  }\n  if (is_a_solution(a, k, input, credits)) {\n    process_solution(a, k, input, solutions);\n    console.log(k);\n    /* return k;*/\n  } else {\n    k = k + 1;\n    let candidates = construct_candidates(a, k, input, credits, max_credits);\n    for (const [idx, candidate] of candidates.entries()) {\n      console.log(input);\n      a.push(candidate);\n      let candidate_credits = calcCredits(candidate);\n      credits += candidate_credits;\n      input = input.filter(item => item !== candidate);\n      backtrack(a, k, input, solutions, credits, max_credits);\n      a.pop(candidate);\n      credits -= candidate_credits;\n\n      /*if (aaa && (input.length === (aaa - k)))\r\n        return aaa;*/\n    }\n  }\n};\n\nconst is_a_solution = (a, k, input, credits) => input.length === 0 && credits === 20;\nconst construct_candidates = (a, k, input, credits, max_credits) => {\n  if (a.length !== 0 && a[k - 2].isSectionLinked && a[k - 2].scheduleTypeDescription === 'TEORICO') {\n    return input.filter(sec => sec.subjectCourse === a[k - 2].subjectCourse && sec.scheduleTypeDescription === 'LABORATORIO' && sec.sequenceNumber.charAt(0) === a[k - 2].linkIdentifier);\n  } else {\n    return input.filter(sec => sec.scheduleTypeDescription === 'TEORICO');\n  }\n};\nconst process_solution = (a, k, input, solutions) => {\n  solutions.push(JSON.parse(JSON.stringify(a)));\n};\nconst generateSchedule = input => {\n  let a = [];\n  let credits = 0;\n  let max_credits = 20;\n  let solutions = [];\n  const sections2 = JSON.parse(JSON.stringify(input));\n  backtrack(a, 0, sections2, solutions, credits, max_credits, []);\n  return solutions;\n};\nconst overlap = (sec1, sec2) => {\n  const days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n  for (const meetSec1 of sec1.meetingsFaculty) {\n    for (const meetSec2 of sec2.meetingsFaculty) {\n      for (const day of days) {\n        if (meetSec1.meetingTime[day] && meetSec2.meetingTime[day]) {\n          if (meetSec1.meetingTime.beginTime <= meetSec2.meetingTime.endTime && meetSec1.meetingTime.endTime >= meetSec2.meetingTime.beginTime) {\n            return true;\n          }\n          break;\n        }\n      }\n    }\n  }\n  return false;\n};\nconst prune = (arr, section, credits, max_credits) => {\n  if (section.subject === \"CHUM\") arr = arr.filter(sec => sec.subject !== \"CHUM\");\n  return arr.filter(sec => (sec.subjectCourse !== section.subjectCourse || sec.scheduleTypeDescription !== section.scheduleTypeDescription) && !overlap(sec, section) && calcCredits(sec) + credits <= max_credits);\n};\nconst calcCredits = section => section.scheduleTypeDescription === 'LABORATORIO' ? 0 : section.creditHourHigh + section.creditHourLow;\nexport default {\n  backtrack: backtrack,\n  is_a_solution: is_a_solution,\n  construct_candidates: construct_candidates,\n  process_solution: process_solution,\n  generateSchedule: generateSchedule,\n  overlap: overlap,\n  prune: prune,\n  calcCredits: calcCredits\n};","map":{"version":3,"names":["backtrack","a","k","input","solutions","credits","max_credits","length","prune","is_a_solution","process_solution","console","log","candidates","construct_candidates","idx","candidate","entries","push","candidate_credits","calcCredits","filter","item","pop","isSectionLinked","scheduleTypeDescription","sec","subjectCourse","sequenceNumber","charAt","linkIdentifier","JSON","parse","stringify","generateSchedule","sections2","overlap","sec1","sec2","days","meetSec1","meetingsFaculty","meetSec2","day","meetingTime","beginTime","endTime","arr","section","subject","creditHourHigh","creditHourLow"],"sources":["C:/Users/samue/horarios/src/generateSchedules.js"],"sourcesContent":["//const sectionsxd = sections.filter((sec) => sec.subjectCourse === \"ISCOA01A\" || sec.subjectCourse === \"ISCOA05A\" || sec.subjectCourse === \"ISCOC08A\" || sec.subjectCourse === \"ISCOZ01A\" || sec.subjectCourse === \"ISCOP01A\" || sec.subjectCourse === \"ISCOC11A\" || sec.subjectCourse === \"ISCOA06A\")\r\n\r\nconst backtrack = (a, k, input, solutions, credits, max_credits) => {\r\n    \r\n  if (a.length !== 0) {\r\n    input = prune(input, a[k-1], credits, max_credits)\r\n  }\r\n  \r\n  if(is_a_solution(a, k, input, credits)) {\r\n    process_solution(a, k, input, solutions);\r\n    console.log(k)\r\n   /* return k;*/\r\n  } else {\r\n    k = k + 1;\r\n    let candidates = construct_candidates(a, k, input, credits, max_credits)\r\n    for (const [idx, candidate] of candidates.entries()) {\r\n      console.log(input)\r\n      a.push(candidate)\r\n      let candidate_credits = calcCredits(candidate)\r\n      credits += candidate_credits\r\n      input = input.filter(item => item !== candidate)\r\n      backtrack(a, k, input, solutions, credits, max_credits);\r\n      a.pop(candidate)\r\n      credits -= candidate_credits\r\n      \r\n      /*if (aaa && (input.length === (aaa - k)))\r\n        return aaa;*/\r\n    }\r\n  }\r\n} \r\n\r\nconst is_a_solution = (a, k, input, credits) => (\r\n  (input.length === 0) && (credits === 20)\r\n  );\r\n\r\nconst construct_candidates = (a, k, input, credits, max_credits) => {\r\n    if (a.length !== 0 && a[k-2].isSectionLinked && a[k-2].scheduleTypeDescription === 'TEORICO') {\r\n      return input.filter((sec) => (sec.subjectCourse === a[k-2].subjectCourse) && (sec.scheduleTypeDescription === 'LABORATORIO')\r\n      && (sec.sequenceNumber.charAt(0) === a[k-2].linkIdentifier))\r\n    }\r\n    else {\r\n    return input.filter((sec) => sec.scheduleTypeDescription === 'TEORICO')\r\n    }\r\n}  \r\n\r\nconst process_solution = (a, k, input, solutions) => {\r\n  solutions.push(JSON.parse(JSON.stringify(a)))\r\n  }\r\n\r\nconst generateSchedule = (input) => {\r\n  let a = [];\r\n  let credits = 0\r\n  let max_credits = 20\r\n  let solutions = [];\r\n  const sections2 = JSON.parse(JSON.stringify(input));\r\n  backtrack(a, 0, sections2, solutions, credits, max_credits, [])\r\n  return solutions;\r\n} \r\n\r\nconst overlap = (sec1, sec2) => {\r\n  const days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\r\n  for (const meetSec1 of sec1.meetingsFaculty) {\r\n    for (const meetSec2 of sec2.meetingsFaculty) {\r\n      for (const day of days) {\r\n        if (meetSec1.meetingTime[day] && meetSec2.meetingTime[day]) {\r\n          if (meetSec1.meetingTime.beginTime <= meetSec2.meetingTime.endTime\r\n            && meetSec1.meetingTime.endTime >= meetSec2.meetingTime.beginTime) {\r\n              return true\r\n            }\r\n          break  \r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst prune = (arr, section, credits, max_credits) => {  \r\n  if (section.subject === \"CHUM\")\r\n    arr = arr.filter(sec => sec.subject !== \"CHUM\")\r\n  \r\n  return(\r\n  arr.filter((sec) => \r\n  (sec.subjectCourse !== section.subjectCourse || \r\n    sec.scheduleTypeDescription !== section.scheduleTypeDescription) &&\r\n  !overlap(sec, section) && \r\n  ((calcCredits(sec) + credits) <= max_credits) \r\n  ))\r\n\r\n}\r\n\r\nconst calcCredits = (section) => (\r\n    section.scheduleTypeDescription === 'LABORATORIO' ? 0 : (section.creditHourHigh + \r\n      section.creditHourLow)\r\n  ) \r\n\r\nexport default {\r\n    backtrack: backtrack,\r\n    is_a_solution : is_a_solution,\r\n    construct_candidates: construct_candidates,\r\n    process_solution: process_solution,\r\n    generateSchedule: generateSchedule,\r\n    overlap: overlap,\r\n    prune: prune ,\r\n    calcCredits: calcCredits\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}