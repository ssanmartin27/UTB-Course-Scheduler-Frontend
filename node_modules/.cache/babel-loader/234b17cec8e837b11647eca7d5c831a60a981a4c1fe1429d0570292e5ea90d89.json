{"ast":null,"code":"'use strict';\n\nconst https = require('https');\nconst querystring = require('querystring');\nconst methods = require('./methods');\nconst config = require('./config');\n\n/**\n * Gets a cookie from the Banner server\n * @private\n * @param {number | string} term A valid term code\n * @returns {Promise<string[]>} A Promise containing the cookie returned by the server\n */\nasync function getCookie(school, term) {\n  let res = await bannerRequest(school, 'getCookie', {\n    'term': term\n  });\n  return res.Response.headers['set-cookie'];\n}\nasync function bannerRequest(school, method) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let needsCookie = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let cookie = needsCookie ? getCookie(school, params.term) : null;\n  console.log(config.schools[school].host);\n  const options = {\n    method: 'GET',\n    host: config.schools[school].host,\n    path: config.global.basePath + methods[method].path + '?' + querystring.stringify(params),\n    headers: {\n      'Cookie': await cookie\n    }\n  };\n  return await promiseRequest(options);\n}\n\n/**\n * Promise wrapper for HTTPS.get\n * @private\n * @param {string} url The URL to send the request to\n * @returns {Promise<{Response: IncomingMessage, Body}>} A Promise containing the response object and parsed body as JSON\n */\nasync function promiseRequest(url) {\n  return new Promise((resolve, reject) => {\n    https.get(url, res => {\n      let body = '';\n      res.on('data', d => body += d);\n      res.on('error', err => reject(err));\n      res.on('end', () => resolve({\n        'Response': res,\n        'Body': JSON.parse(body)\n      }));\n    }).on('error', err => reject(err));\n  });\n}\nasync function batchRequest(batchSize, pageSize, batch) {\n  let requestParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let method = arguments.length > 4 ? arguments[4] : undefined;\n  let school = arguments.length > 5 ? arguments[5] : undefined;\n  if (batchSize <= pageSize) {\n    throw new Error('Batch size must be greater than page size');\n  }\n  const idxs = [...Array(batchSize / pageSize).keys()].map(idx => ++idx + batchSize / pageSize * batch);\n  let res = await Promise.all(idxs.map(async idx => {\n    const params = {\n      offset: idx,\n      max: pageSize,\n      ...requestParams\n    };\n    return bannerRequest(school, method, params);\n  }));\n  return res.map(obj => obj.Body).flat();\n}\n\n/**\n * @exports\n */\nmodule.exports = {\n  promiseRequest,\n  bannerRequest,\n  getCookie,\n  batchRequest\n};","map":{"version":3,"names":["https","require","querystring","methods","config","getCookie","school","term","res","bannerRequest","Response","headers","method","params","arguments","length","undefined","needsCookie","cookie","console","log","schools","host","options","path","global","basePath","stringify","promiseRequest","url","Promise","resolve","reject","get","body","on","d","err","JSON","parse","batchRequest","batchSize","pageSize","batch","requestParams","Error","idxs","Array","keys","map","idx","all","offset","max","obj","Body","flat","module","exports"],"sources":["C:/Users/samue/horarios/src/lib/private.js"],"sourcesContent":["'use strict';\n\nconst https = require('https');\nconst querystring = require('querystring');\nconst methods = require('./methods');\nconst config = require('./config');\n\n/**\n * Gets a cookie from the Banner server\n * @private\n * @param {number | string} term A valid term code\n * @returns {Promise<string[]>} A Promise containing the cookie returned by the server\n */\nasync function getCookie(school, term){\n\n    let res = await bannerRequest(school, 'getCookie', {'term': term});\n    return res.Response.headers['set-cookie'];\n}\n\nasync function bannerRequest(school, method, params={}, needsCookie=false){\n    let cookie = needsCookie ? getCookie(school, params.term) : null;\n    console.log(config.schools[school].host)\n    const options = {\n        method: 'GET',\n        host: config.schools[school].host,\n        path: config.global.basePath + methods[method].path + '?' + querystring.stringify(params),\n        headers: {\n            'Cookie': await cookie    \n        }\n    };\n    return await promiseRequest(options);\n}\n\n/**\n * Promise wrapper for HTTPS.get\n * @private\n * @param {string} url The URL to send the request to\n * @returns {Promise<{Response: IncomingMessage, Body}>} A Promise containing the response object and parsed body as JSON\n */\nasync function promiseRequest(url){\n    return new Promise((resolve, reject) => {\n        https.get(url, (res) => {\n            let body = '';\n            res.on('data', (d) => body += d);\n            res.on('error', (err) => reject(err));\n            res.on('end', () => resolve({\n                'Response': res, \n                'Body': JSON.parse(body)\n            }));\n        }).on('error', (err) => reject(err));\n    });\n}\n\nasync function batchRequest(batchSize, pageSize, batch, requestParams={}, method, school){\n    if(batchSize <= pageSize){\n        throw new Error('Batch size must be greater than page size');\n    }\n    const idxs = [...Array(batchSize / pageSize).keys()].map(idx => ++idx + (batchSize / pageSize ) * batch);\n    let res = await Promise.all(idxs.map(async idx => {\n        const params = {\n            offset: idx,\n            max: pageSize,\n            ...requestParams\n        };\n        return bannerRequest(school, method, params);\n    }));\n    return res.map(obj => obj.Body).flat();\n}\n\n/**\n * @exports\n */\nmodule.exports = {promiseRequest, bannerRequest, getCookie, batchRequest};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}