{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\horarios\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport bannerService from './banners';\nimport Nav from './components/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [sections, setSections] = useState([]);\n  useEffect(() => {\n    bannerService.classSearch(202320, 'ISCO').then(sec => setSections(sec.data.data));\n  }, []);\n  const backtrack = (a, k, input, solutions) => {\n    if (is_a_solution(a, k, input)) {\n      console.log(\"solution found\");\n      process_solution(a, k, input, solutions);\n    } else {\n      k = k + 1;\n      let candidates = construct_candidates(a, k, input);\n      for (const candidate of candidates) {\n        //make_move(a, k, input);\n        a.push(candidate);\n        backtrack(a, k, candidates, solutions);\n        a.pop(candidate);\n        if (solutions.length === 5) {\n          return;\n        }\n      }\n    }\n  };\n  const is_a_solution = (a, k, input) => k === input.length + 1\n  //a.length === 6\n  ;\n\n  const construct_candidates = (a, k, input) => {\n    if (a.length === 0) {\n      return input;\n    } else {\n      return prune(input, a[k - 2]);\n    }\n  };\n  const process_solution = (a, k, input, solutions) => {\n    solutions.push(JSON.parse(JSON.stringify(a)));\n    console.log(solutions);\n  };\n  const generateSchedule = input => {\n    let a = [];\n    let solutions = [];\n    const sections2 = JSON.parse(JSON.stringify(input));\n    backtrack(a, 0, sections2, solutions);\n    return solutions;\n  };\n  const overlap = (sec1, sec2) => {\n    const days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n    for (const meetSec1 of sec1.meetingsFaculty) {\n      for (const meetSec2 of sec2.meetingsFaculty) {\n        for (const day of days) {\n          if (meetSec1.meetingTime[day] && meetSec2.meetingTime[day]) {\n            if (meetSec1.meetingTime.beginTime <= meetSec2.meetingTime.endTime && meetSec1.meetingTime.endTime >= meetSec2.meetingTime.beginTime) {\n              return true;\n            }\n            break;\n          }\n        }\n      }\n    }\n    return false;\n  };\n  const prune = (arr, section) => {\n    return arr.filter(sec => sec.subjectCourse !== section.subjectCourse && !overlap(sec, section));\n  };\n\n  //console.log(\"solution:\", generateSchedule(sections))\n  if (sections.length > 0) {\n    console.log(\"solution:\", generateSchedule(sections));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"par\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sections.map(section => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: section.courseTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kCktYw4e8pGvkaFbsIgbDJnEBNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","bannerService","Nav","jsxDEV","_jsxDEV","App","_s","sections","setSections","classSearch","then","sec","data","backtrack","a","k","input","solutions","is_a_solution","console","log","process_solution","candidates","construct_candidates","candidate","push","pop","length","prune","JSON","parse","stringify","generateSchedule","sections2","overlap","sec1","sec2","days","meetSec1","meetingsFaculty","meetSec2","day","meetingTime","beginTime","endTime","arr","section","filter","subjectCourse","class","children","fileName","_jsxFileName","lineNumber","columnNumber","map","courseTitle","_c","$RefreshReg$"],"sources":["C:/Users/samue/horarios/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport bannerService from './banners'\nimport Nav from './components/Nav'\n\n\nconst App = () => {\n\n  const [sections, setSections] = useState([])\n\n  useEffect(() => {\n    bannerService.classSearch(202320, 'ISCO')\n      .then(sec => setSections(sec.data.data))\n  }, [])\n\n  const backtrack = (a, k, input, solutions) => {\n    if(is_a_solution(a, k, input)) {\n      console.log(\"solution found\")\n      process_solution(a, k, input, solutions);\n    } else {\n      k = k + 1;\n      let candidates = construct_candidates(a, k, input)\n      for (const candidate of candidates) {\n        //make_move(a, k, input);\n        a.push(candidate)\n        backtrack(a, k, candidates, solutions);\n        a.pop(candidate)\n\n        if (solutions.length === 5){\n            return;\n        }\n        \n      }\n    }\n  } \n\n  const is_a_solution = (a, k, input) => (\n    k === input.length+1\n    //a.length === 6\n    );\n\n  const construct_candidates = (a, k, input) => {\n    if (a.length === 0) {\n      return input\n    }\n    else {\n      return prune(input, a[k-2])\n    }\n  }  \n\n  const process_solution = (a, k, input, solutions) => {\n    solutions.push(JSON.parse(JSON.stringify(a)))\n    console.log(solutions)\n    }\n\n  const generateSchedule = (input) => {\n    let a = []\n    let solutions = []\n    const sections2 = JSON.parse(JSON.stringify(input));\n    backtrack(a, 0, sections2, solutions)\n    return solutions;\n  } \n\n  const overlap = (sec1, sec2) => {\n    const days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n    for (const meetSec1 of sec1.meetingsFaculty) {\n      for (const meetSec2 of sec2.meetingsFaculty) {\n        for (const day of days) {\n          if (meetSec1.meetingTime[day] && meetSec2.meetingTime[day]) {\n            if (meetSec1.meetingTime.beginTime <= meetSec2.meetingTime.endTime\n              && meetSec1.meetingTime.endTime >= meetSec2.meetingTime.beginTime) {\n                return true\n              }\n            break  \n          }\n        }\n      }\n    }\n    return false\n  }\n\n  const prune = (arr, section) => {\n    return(\n    arr.filter((sec) => (sec.subjectCourse !== section.subjectCourse) &&\n    !overlap(sec, section)\n    ))}\n  \n  //console.log(\"solution:\", generateSchedule(sections))\n  if(sections.length > 0 ) {\n    console.log(\"solution:\", generateSchedule(sections))\n  }\n  \n  return(\n    <div class='par'>\n      <Nav/>\n      <ul>\n        {sections.map(section => <li>{section.courseTitle}</li>)}\n      </ul>\n    </div>)\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}